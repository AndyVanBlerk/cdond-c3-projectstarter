version: 2.1
## Destroy environment only blueprint
commands:
  destroy-environment:
    description: Destroy back-end and front-end cloudformation stacks given a workflow ID.
    parameters:
      workflow_id: 
        type: string
      event:
        type: string
    steps:
      - run:
          name: Destroy environments
          when: on_fail
          command: |
            echo " Destroying Environment: "-<<parameters.workflow_id>>
            echo " aws s3 rm s3://udapeople-<<parameters.workflow_id>> --recursive "
            aws s3 rm s3://udapeople-<<parameters.workflow_id>> --recursive
            aws cloudformation delete-stack --stack-name udapeople-backend-<<parameters.workflow_id>>
            echo " aws cloudformation delete-stack --stack-name udapeople-backend-<<parameters.workflow_id>> "
            aws cloudformation delete-stack --stack-name udapeople-frontend-<<parameters.workflow_id>>

  revert-migrations:
    description: Revert the last migration if successfully run in the current workflow.
    parameters:
      workflow_id:
        type: string     
    steps:
      - run:
          name: Revert migrations 
          when: on_fail            # Add when this will run
          command: |
            # Curl command here to see if there was a successful migration associated with the workflow id, store result 
            npm run migrations:revert  
            
defaults: &defaults   ## anchor & aliases
    docker:
      - image: circleci/node:13.8.0            
jobs:      
  build-backend:
    <<: *defaults  
    steps:
      - checkout
      - restore_cache:
          keys: [backend-build]
      - run:
          name: Back-end build
          command: |
            cd backend
            npm install
            npm run build
      - save_cache:
          paths: [backend/node_modules]
          key: backend-build      

  Revert-migrations:
    <<: *defaults 
    steps:
      - checkout 
      - run:
          name: Install dependencies
          command: |
            npm install webpack-dev-server -g
            npm install
            aws --version  
      - run: exit 1  # kicks off the destroy-environment
      - revert-migrations:
          workflow_id: "5cfa402"  ###@@@@@"${CIRCLE_WORKFLOW_ID:0:7}"

workflows:
  Revert-1:
    jobs:
      - Revert-migrations

