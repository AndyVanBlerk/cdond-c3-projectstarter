version: 2.1

commands:
  destroy-environment:
    description: Destroy back-end and front-end cloudformation stacks given a workflow ID.
    parameters:
      workflow_id: 
        type: string
      event:
        type: string
    steps:
      - run:
          name: Destroy environments
          when: on_fail
          command: |
            # Your code here
            echo " Destroying Environment: << parameters.workflow_id >>"
            aws s3 rm s3://udapeople << parameters.workflow_id >> --recursive
            aws cloudformation delete-stack --stack-name udapeople-backend << parameterers
            aws cloudformation delete-stack --stack-name udapeople-frontend << parameterers
            exit 1

  revert-migrations:
    description: Revert the last migration if successfully run in the current workflow.
    parameters:
      # Add parameter here     
    steps:
      - run:
          name: Revert migrations
          # Add when this will run
          command: |
            # Curl command here to see if there was a successful migration associated with the workflow id, store result in SUCCESS variable
            SUCCESS = 1
            if(( $SUCCESS==1 )); 
            then
            #  cd ~/project/backend
            #  npm install
            #  Add revert code here. You can find this in the Getting Started section.
              exit 1
            fi

defaults: &defaults   ## anchor & aliases
    docker:
      - image: circleci/node:13.8.0

jobs:
  lint-frontend: 
    CODE: 123
  <<: *defaults  
  steps:  
    - checkout
    - restore_cache:
        keys: [frontend-build]
    - run: 
        name: lint frontend
        command: |
          cd frontend
          echo $CODE
          npm install
          npm run build
    - save_cache:
        paths: [frontned/node_modules]
        key: frontend-build

  build-frontend:
    <<: *defaults  
    steps:
      - checkout
      - restore_cache:
          keys: [frontend-build]
      - run:
          name: Build front-end
          command: |
            cd frontend
            npm install
            npm run build
            exit 1
      - save_cache:
          paths: [frontend/node_modules]
          key: frontend-build

  build-backend:
    <<: *defaults  
    steps:
      - checkout
      - restore_cache:
          keys: [backend-build]
      - run:
          name: Back-end build
          command: |
            cd backend
            npm install
            npm run build
            exit 1
      - save_cache:
          paths: [backend/node_modules]
          key: backend-build

workflows:
  default:
    jobs:
      - build-frontend
      - build-backend
 